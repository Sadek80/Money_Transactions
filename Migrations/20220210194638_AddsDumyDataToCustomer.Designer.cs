// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Money_Transaction.Model;

namespace Money_Transaction.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20220210194638_AddsDumyDataToCustomer")]
    partial class AddsDumyDataToCustomer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Money_Transaction.Model.Core.Domain.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f984986-652d-483c-87f8-a191329ea26a"),
                            Balance = 32000.0,
                            Email = "xl43y@ermtia.com",
                            FirstName = "Mohamed",
                            ImageUrl = "./Images/profile-pic/3.jpg",
                            LastName = "Sadek"
                        },
                        new
                        {
                            Id = new Guid("4d84c786-c637-4e92-802e-d9948ea6cb55"),
                            Balance = 20000.0,
                            Email = "paulallum@mobilekoki.com",
                            FirstName = "Ali",
                            ImageUrl = "./Images/profile-pic/1.jpg",
                            LastName = "Yasser"
                        },
                        new
                        {
                            Id = new Guid("814a58ed-f5a0-4343-bbc7-5c0b20448c8d"),
                            Balance = 50000.0,
                            Email = "nloololo@aaskin.fr",
                            FirstName = "Mohamed",
                            ImageUrl = "./Images/profile-pic/3.jpg",
                            LastName = "Shaaban"
                        },
                        new
                        {
                            Id = new Guid("38ec1e4f-7573-48f0-86fa-0fb4a6e251b2"),
                            Balance = 6000.0,
                            Email = "junemark@filevino.com",
                            FirstName = "Amr",
                            ImageUrl = "./Images/profile-pic/1.jpg",
                            LastName = "Gaber"
                        },
                        new
                        {
                            Id = new Guid("7a7ba57c-2696-4acd-9759-0cdb93804cf8"),
                            Balance = 40000.0,
                            Email = "slatedust@boranora.com",
                            FirstName = "Belal",
                            ImageUrl = "./Images/profile-pic/3.jpg",
                            LastName = "Arfa"
                        },
                        new
                        {
                            Id = new Guid("c6c274d2-1f23-43df-a919-ea22f78dd683"),
                            Balance = 20000.0,
                            Email = "grigorjevo@inadtia.com",
                            FirstName = "Ahmed",
                            ImageUrl = "./Images/profile-pic/1.jpg",
                            LastName = "Rahoma"
                        },
                        new
                        {
                            Id = new Guid("5cf1e92d-04cb-452f-b231-cbf985277c2d"),
                            Balance = 55000.0,
                            Email = "fx91@mymailcr.com",
                            FirstName = "Ziyad",
                            ImageUrl = "./Images/profile-pic/3.jpg",
                            LastName = "Ahmed"
                        },
                        new
                        {
                            Id = new Guid("7372e17a-1d57-433b-a977-137626181b67"),
                            Balance = 33000.0,
                            Email = "ivlievai85@fartovoe1.fun",
                            FirstName = "Mohamed",
                            ImageUrl = "./Images/profile-pic/1.jpg",
                            LastName = "Tolba"
                        });
                });

            modelBuilder.Entity("Money_Transaction.Model.Core.Domain.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RecieverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("RecieverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Money_Transaction.Model.Core.Domain.Transaction", b =>
                {
                    b.HasOne("Money_Transaction.Model.Core.Domain.Customer", "Reciever")
                        .WithMany("RecievedTransactions")
                        .HasForeignKey("RecieverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Money_Transaction.Model.Core.Domain.Customer", "Sender")
                        .WithMany("SentTransactions")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reciever");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Money_Transaction.Model.Core.Domain.Customer", b =>
                {
                    b.Navigation("RecievedTransactions");

                    b.Navigation("SentTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
