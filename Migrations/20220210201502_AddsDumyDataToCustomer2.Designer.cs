// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Money_Transaction.Model;

namespace Money_Transaction.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20220210201502_AddsDumyDataToCustomer2")]
    partial class AddsDumyDataToCustomer2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Money_Transaction.Model.Core.Domain.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1aaf1670-2c50-4a72-81db-15e624a19804"),
                            Balance = 32000.0,
                            Email = "xl43y@ermtia.com",
                            FirstName = "Mohamed",
                            ImageUrl = "./Images/profile-pic/3.jpg",
                            LastName = "Sadek"
                        },
                        new
                        {
                            Id = new Guid("eff5fb64-2a66-42b7-a15c-69a71599ff2a"),
                            Balance = 20000.0,
                            Email = "paulallum@mobilekoki.com",
                            FirstName = "Ali",
                            ImageUrl = "./Images/profile-pic/1.jpg",
                            LastName = "Yasser"
                        },
                        new
                        {
                            Id = new Guid("ec0f52d6-8102-4a3c-bb88-cfa368fa885a"),
                            Balance = 50000.0,
                            Email = "nloololo@aaskin.fr",
                            FirstName = "Mohamed",
                            ImageUrl = "./Images/profile-pic/3.jpg",
                            LastName = "Shaaban"
                        },
                        new
                        {
                            Id = new Guid("3c9598fc-3c5e-48b1-8d29-b6eb061cf2a7"),
                            Balance = 6000.0,
                            Email = "junemark@filevino.com",
                            FirstName = "Amr",
                            ImageUrl = "./Images/profile-pic/1.jpg",
                            LastName = "Gaber"
                        },
                        new
                        {
                            Id = new Guid("acb1a0e0-b76b-4624-ac39-41a272daec5f"),
                            Balance = 40000.0,
                            Email = "slatedust@boranora.com",
                            FirstName = "Belal",
                            ImageUrl = "./Images/profile-pic/3.jpg",
                            LastName = "Arfa"
                        },
                        new
                        {
                            Id = new Guid("598d0ad7-b106-41e9-a791-b44a49aaa523"),
                            Balance = 20000.0,
                            Email = "grigorjevo@inadtia.com",
                            FirstName = "Ahmed",
                            ImageUrl = "./Images/profile-pic/1.jpg",
                            LastName = "Rahoma"
                        },
                        new
                        {
                            Id = new Guid("259e3c25-62e0-4872-9edd-84db6d3c4caa"),
                            Balance = 55000.0,
                            Email = "fx91@mymailcr.com",
                            FirstName = "Ziyad",
                            ImageUrl = "./Images/profile-pic/3.jpg",
                            LastName = "Ahmed"
                        },
                        new
                        {
                            Id = new Guid("dceded7e-982a-443b-88a3-9b7592063790"),
                            Balance = 33000.0,
                            Email = "ivlievai85@fartovoe1.fun",
                            FirstName = "Mohamed",
                            ImageUrl = "./Images/profile-pic/1.jpg",
                            LastName = "Tolba"
                        },
                        new
                        {
                            Id = new Guid("b0bd5a88-f9cc-4e60-854e-7fa8ccf2bff9"),
                            Balance = 33000.0,
                            Email = "ivlievai85@fartovoe1.fun",
                            FirstName = "Mohamed",
                            ImageUrl = "./Images/profile-pic/1.jpg",
                            LastName = "Tolba"
                        },
                        new
                        {
                            Id = new Guid("3ce79a35-ef3d-4549-afe1-3ca7df57f91f"),
                            Balance = 33000.0,
                            Email = "ivlievai85@fartovoe1.fun",
                            FirstName = "Mohamed",
                            ImageUrl = "./Images/profile-pic/1.jpg",
                            LastName = "Tolba"
                        },
                        new
                        {
                            Id = new Guid("81f1b812-2b8f-4955-abe0-70a6320cf09a"),
                            Balance = 89000.0,
                            Email = "ivlievai85@fartovoe1.fun",
                            FirstName = "Amr",
                            ImageUrl = "./Images/profile-pic/3.jpg",
                            LastName = "Ahmed"
                        },
                        new
                        {
                            Id = new Guid("6f749b35-e313-4c50-83f3-c9deeb96f780"),
                            Balance = 122000.0,
                            Email = "ivlievai85@fartovoe1.fun",
                            FirstName = "Ahmed",
                            ImageUrl = "./Images/profile-pic/1.jpg",
                            LastName = "Salem"
                        },
                        new
                        {
                            Id = new Guid("37e54ca5-c1f6-4806-9bfa-0b23ea97cddf"),
                            Balance = 93000.0,
                            Email = "ivlievai85@fartovoe1.fun",
                            FirstName = "Eslam",
                            ImageUrl = "./Images/profile-pic/3.jpg",
                            LastName = "Elsayed"
                        });
                });

            modelBuilder.Entity("Money_Transaction.Model.Core.Domain.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RecieverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("RecieverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Money_Transaction.Model.Core.Domain.Transaction", b =>
                {
                    b.HasOne("Money_Transaction.Model.Core.Domain.Customer", "Reciever")
                        .WithMany("RecievedTransactions")
                        .HasForeignKey("RecieverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Money_Transaction.Model.Core.Domain.Customer", "Sender")
                        .WithMany("SentTransactions")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reciever");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Money_Transaction.Model.Core.Domain.Customer", b =>
                {
                    b.Navigation("RecievedTransactions");

                    b.Navigation("SentTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
